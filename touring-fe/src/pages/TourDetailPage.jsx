import { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Heart, MapPin, Star, Plus, Minus } from "lucide-react";
// import { destinationList } from "../mockdata/destinationList";
import TourCard from "../components/TourCard";
import { useEffect } from "react";

export default function TourDetailPage() {
  const { id } = useParams();
  const tourId = id;
  const [tour, setTour] = useState(null);
  const [allTours, setAllTours] = useState([]);

  useEffect(() => {

    fetch(`http://localhost:5000/api/tours/${id}`)

      .then((res) => res.json())
      .then((data) => setTour(data))
      .catch((err) => console.error("Error fetching tour:", err));

    // L·∫•y danh s√°ch ƒë·ªÉ g·ª£i √Ω

    fetch("http://localhost:5000/api/tours")


      .then((res) => res.json())
      .then((data) => setAllTours(data))
      .catch((err) => console.error("Error fetching tours:", err));

    window.scrollTo({ top: 0, behavior: "smooth" });
  }, [id]);

  useEffect(() => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  }, [tourId]);

  const [isFav, setIsFav] = useState(false);
  // const [selectedDate, setSelectedDate] = useState("");
  const [quantity, setQuantity] = useState(1);
  // const [showAllPhotos, setShowAllPhotos] = useState(false);
  const [showMoreService, setShowMoreService] = useState(false);
  const navigate = useNavigate();

  // const allTours = Object.values(destinationList).flat();
  // const tour = allTours.find((t) => t.id.toString() === tourId);

  // if (!tour) return <div className="p-6">Kh√¥ng t√¨m th·∫•y tour</div>;

  // const suggestedTours = allTours.filter((t) => t.id !== tour.id).slice(0, 4);

  const increaseQuantity = () => setQuantity((prev) => prev + 1);
  const decreaseQuantity = () => setQuantity((prev) => Math.max(1, prev - 1));

  const discountPercent = tour?.originalPrice
    ? Math.round(
        ((tour.originalPrice - tour.currentPrice) / tour.originalPrice) * 100
      )
    : null;

  if (!tour) {
    return <div className="p-6">ƒêang t·∫£i tour...</div>;
  }

  const handleFavorite = () => setIsFav(!isFav);

  const handleBooking = () => {
    alert(
      `ƒê·∫∑t tour: ${tour.title}\nS·ªë l∆∞·ª£ng: ${quantity}\nT·ªïng ti·ªÅn: ${(
        tour.currentPrice * quantity
      ).toLocaleString()}‚Ç´`
    );
  };

  const suggestedTours = allTours
    .filter((t) => t._id !== tour?._id)
    .slice(0, 4);

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Breadcrumb */}
      <div className="bg-white px-4 py-3 border-b">
        <div className="max-w-7xl mx-auto">
          <div className="flex items-center text-sm text-gray-600">
            <span className="text-blue-500 font-medium">Travyy Travel</span>
            <span className="mx-2">‚Ä∫</span>
            <span>{tour.location}</span>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-6">
        {/* Header */}
        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <div className="flex justify-between items-start mb-4">
            <div className="flex-1">
              <h1 className="text-2xl md:text-3xl font-bold text-gray-900 mb-2">
                {tour.title}
              </h1>
              <div className="flex items-center gap-4 text-sm">
                <div className="flex items-center gap-1">
                  <Star className="w-4 h-4 text-yellow-400 fill-current" />
                  <span className="font-semibold">{tour.rating}</span>
                  <span className="text-gray-500">
                    ({tour.reviews?.toLocaleString()} ƒê√°nh gi√°)
                  </span>
                </div>
                <div className="flex items-center gap-1 text-gray-600">
                  <span>{tour.booked} ƒê√£ ƒë·∫∑t</span>
                </div>
                <div className="flex items-center gap-1 text-gray-600">
                  <MapPin className="w-4 h-4" />
                  <span>{tour.location}</span>
                </div>
              </div>
            </div>
            <button
              onClick={handleFavorite}
              className={`p-2 rounded-full border ${
                isFav
                  ? "bg-red-50 border-red-200"
                  : "bg-gray-50 border-gray-200"
              } hover:shadow-sm transition-all`}
            >
              <Heart
                className={`w-5 h-5 ${
                  isFav ? "text-red-500 fill-current" : "text-gray-400"
                }`}
              />
            </button>
          </div>

          {/* Image Gallery */}
          <div className="grid grid-cols-4 gap-2 mb-6">
            <div className="col-span-4 md:col-span-2 relative">
              <img
                src={tour.image}
                alt={tour.title}
                className="w-full h-64 md:h-80 object-cover rounded-lg"
              />
            </div>
            <div className="col-span-2 md:col-span-1 grid grid-rows-2 gap-2">
              <img
                src={tour.gallery?.[0] || tour.image}
                alt="Gallery 1"
                className="w-full h-32 md:h-39 object-cover rounded-lg"
              />
              <img
                src={tour.gallery?.[1] || tour.image}
                alt="Gallery 2"
                className="w-full h-32 md:h-39 object-cover rounded-lg"
              />
            </div>
            <div className="col-span-2 md:col-span-1 grid grid-rows-2 gap-2">
              <img
                src={tour.gallery?.[0] || tour.image}
                alt="Gallery 3"
                className="w-full h-32 md:h-39 object-cover rounded-lg"
              />
              <div className="relative">
                <img
                  src={tour.gallery?.[1] || tour.image}
                  alt="Gallery 4"
                  className="w-full h-32 md:h-39 object-cover rounded-lg"
                />
                <div className="absolute inset-0 bg-black bg-opacity-40 rounded-lg flex items-center justify-center">
                  <button
                    // onClick={() => setShowAllPhotos(true)}
                    className="text-white font-medium text-sm"
                  >
                    Th∆∞ vi·ªán ·∫£nh
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* Service Description */}
          <div className="bg-blue-50 p-4 rounded-lg mb-6">
            <div className="flex items-start gap-3">
              <div className="text-2xl">üéâ</div>
              <div className="space-y-2 text-sm">
                <p>
                  ‚Ä¢ D·ªãch v·ª• ƒë√≥n/ti·ªÖn ∆∞u ti√™n t·∫°i s√¢n bay (fast track) s·∫Ω gi√∫p
                  qu√Ω kh√°ch ti·∫øt ki·ªám th·ªùi gian, ƒë·∫∑c bi·ªát v√†o c√°c khung gi·ªù cao
                  ƒëi·ªÉm, trong qu√° tr√¨nh ch·ªù ƒë·ª£i l√†m th·ªß t·ª•c t·∫°i s√¢n bay.
                </p>
                <p>
                  ‚Ä¢ T·∫°i s√¢n bay, ƒë·∫°i di·ªán c·ªßa ch√∫ng t√¥i s·∫Ω ch√†o ƒë√≥n qu√Ω kh√°ch v√†
                  h·ªó tr·ª£ qu√Ω kh√°ch trong m·ªçi th·ªß t·ª•c gi·∫•y t·ªù t·∫°i s√¢n bay m·ªôt
                  c√°ch nhanh ch√≥ng v√† thu·∫≠n ti·ªán nh·∫•t
                </p>
                {!showMoreService && (
                  <button
                    onClick={() => setShowMoreService(true)}
                    className="text-blue-600 font-medium underline text-sm"
                  >
                    Xem th√™m ‚Ä∫
                  </button>
                )}

                {showMoreService && (
                  <p className="text-sm text-gray-600 mt-2">
                    {tour.moreServiceInfo}
                  </p>
                )}
              </div>
            </div>
          </div>

          {/* Priority Banner */}
          <div
            //c·∫ßn t·∫°o th√™m route /discounts trong App.jsx
            onClick={() => navigate("/discounts")}
            className="bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 p-3 rounded-lg cursor-pointer border border-gray-300 hover:shadow-lg transition-shadow duration-300"
          >
            <div className="flex items-center justify-between text-white font-semibold">
              <span>∆Øu ƒë√£i cho b·∫°n</span>
              <div className="flex items-center gap-2">
                <span className="bg-white text-blue-500 text-xs px-2 py-1 rounded">
                  Gi·∫£m 9%
                </span>
                <span>‚Ä∫</span>
              </div>
            </div>
          </div>

          {/* Main Content */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Left Content */}
            <div className="lg:col-span-2 space-y-6">
              {/* Important Notes */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h2 className="text-xl font-bold text-blue-600 mb-4 border-l-4 border-blue-500 pl-3">
                  Nh·ªØng ƒëi·ªÅu c·∫ßn l∆∞u √Ω
                </h2>
                <div className="space-y-4">
                  <div>
                    <h3 className="font-semibold mb-2">X√°c nh·∫≠n</h3>
                    <p className="text-sm text-gray-600">
                      ‚Ä¢ X√°c nh·∫≠n ngay t·ª©c th·ªùi. N·∫øu b·∫°n kh√¥ng nh·∫≠n ƒë∆∞·ª£c email
                      x√°c nh·∫≠n ƒë∆°n h√†ng, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i
                    </p>
                  </div>
                  <div>
                    <h3 className="font-semibold mb-2">ƒêi·ªÅu ki·ªán</h3>
                    <div className="text-sm text-gray-600 space-y-1">
                      <p>‚Ä¢ Tr·∫ª em t·ª´ 2+ tu·ªïi s·∫Ω ƒë∆∞·ª£c t√≠nh ph√≠ nh∆∞ ng∆∞·ªùi l·ªõn</p>
                      <p>
                        ‚Ä¢ Tr·∫ª em d∆∞·ªõi 2 tu·ªïi ƒë∆∞·ª£c mi·ªÖn ph√≠ nh∆∞ng ph·∫£i ƒëi c√πng √≠t
                        nh·∫•t m·ªôt ng∆∞·ªùi l·ªõn. N·∫øu b·∫°n c√≥ tr·∫ª em d∆∞·ªõi 2 tu·ªïi ƒëi
                        k√®m, vui l√≤ng cung c·∫•p h·ªç t√™n ƒë·∫ßy ƒë·ªß, qu·ªëc t·ªãch v√† nƒÉm
                        sinh t·∫°i trang thanh to√°n
                      </p>
                    </div>
                  </div>
                  <div>
                    <h3 className="font-semibold mb-2">Th√¥ng tin th√™m</h3>
                    <div className="text-sm text-gray-600 space-y-1">
                      <p>
                        ‚Ä¢ <strong>Ch√∫ √Ω:</strong> Travyy v√† nh√† cung c·∫•p d·ªãch v·ª•
                        s·∫Ω kh√¥ng ch·ªãu tr√°ch nhi·ªám cho nh·ªØng v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn
                        VISA c·ªßa qu√Ω kh√°ch. D·ªãch v·ª• ƒë√≥n ti·ªÖn ∆∞u ti√™n kh√¥ng bao
                        g·ªìm d·ªãch v·ª• VISA
                      </p>
                      <p>‚Ä¢ Not available from 00:00 AM to 05:00 AM everyday.</p>
                      <p>‚Ä¢ Support Hotline: +84866624188</p>
                      <p>
                        {" "}
                        <p>
                          {tour.itinerary?.[0]?.description ||
                            "Ch∆∞a c√≥ l·ªãch tr√¨nh"}
                        </p>
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Map Section */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h2 className="text-xl font-bold text-blue-600 mb-4 border-l-4 border-blue-500 pl-3">
                  ƒê·ªãa ƒëi·ªÉm
                </h2>
                <div className="w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center">
                  <p className="text-gray-500">B·∫£n ƒë·ªì s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y</p>
                </div>
              </div>

              {/* Reviews Section */}
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h2 className="text-xl font-bold text-blue-600 mb-4 border-l-4 border-blue-500 pl-3">
                  ƒê√°nh gi√°
                </h2>
                <div className="flex items-center gap-4 mb-6">
                  <div className="flex items-center gap-2">
                    <div className="text-3xl">üòä</div>
                    <div>
                      <div className="text-2xl font-bold text-orange-600">
                        {tour.rating}
                      </div>
                      <div className="text-sm text-gray-500">H√†i l√≤ng</div>
                    </div>
                  </div>
                  <div className="text-sm text-gray-600">
                    / 5 | {tour.reviews?.toLocaleString()} ƒê√°nh gi√°
                  </div>
                </div>

                {/* Review Filters */}
                <div className="flex gap-2 mb-4 flex-wrap">
                  <button className="px-3 py-1 text-sm border border-orange-300 text-orange-600 rounded-full">
                    ƒê√°nh gi√° ph√π h·ª£p nh·∫•t
                  </button>
                  <button className="px-3 py-1 text-sm border border-gray-300 rounded-full">
                    T·∫•t c·∫£
                  </button>
                  <button className="px-3 py-1 text-sm border border-gray-300 rounded-full">
                    C√≥ h√¨nh ·∫£nh
                  </button>
                  <button className="px-3 py-1 text-sm border border-gray-300 rounded-full">
                    Ch·ªâ ti·∫øng Vi·ªát
                  </button>
                </div>

                {/* Sample Review */}
                <div className="border-t pt-4">
                  <div className="flex items-start gap-3">
                    <div className="w-8 h-8 bg-amber-200 rounded-full flex items-center justify-center text-sm font-semibold">
                      J
                    </div>
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-1">
                        <span className="font-semibold text-sm">
                          Joselle ********
                        </span>
                        <span className="text-xs text-gray-500">
                          2025/07/29
                        </span>
                        <div className="flex items-center gap-1 ml-auto">
                          <span className="text-xs text-orange-600 bg-orange-100 px-2 py-1 rounded">
                            H√†i l√≤ng
                          </span>
                          <span className="text-yellow-500 text-sm">5.0</span>
                        </div>
                      </div>
                      <p className="text-sm text-gray-600 mb-2">
                        ƒê√°nh gi√° cho: Chuy·∫øn Bay ƒê√™m ‚Ä¢ Chuy·∫øn bay qu·ªëc t·∫ø ‚Ä¢ ∆Øu
                        ti√™n
                      </p>
                      <p className="text-sm">
                        M·ªôt gi√° ƒë√¨nh c·∫£ h√†i b√© m·ªõi bi·∫øt ƒëi v√† m·ªôt em b√© ƒë√¢y l√†
                        m·ªôt l·∫ßn ƒëi KH√îNG C·∫¶N PH·∫¢I SUY NGHƒ®. S√¢n bay TSN kh√¥ng c√≥
                        h√†ng ∆∞u ti√™n, v√¨ v·∫≠y d·ªãch v·ª• n√†y r·∫•t c·∫ßn thi·∫øt, ƒë·∫∑c bi·ªát
                        ƒë·ªëi v·ªõi nh·ªØng ng∆∞·ªùi ph·∫£i b·∫Øt chuy·∫øn bay kh√°c, nh∆∞ ch√∫ng
                        t√¥i. R·∫•t ƒë√°ng gi√°.
                      </p>
                      <button className="text-sm text-blue-600 underline mt-2">
                        Hi·ªÉn th·ªã ƒë√°nh gi√° g·ªëc (N·ªòI dung ti·∫øng ƒë√£ ƒë∆∞·ª£c d·ªãch)
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Right Sidebar - Booking */}
            <div className="lg:col-span-1">
              <div className="bg-white rounded-lg shadow-sm p-6 sticky top-6">
                <h3 className="font-semibold mb-4">S·ªë l∆∞·ª£ng</h3>

                <div className="flex items-center justify-between mb-6">
                  <span className="text-gray-700">Ng∆∞·ªùi l·ªõn</span>
                  <div className="flex items-center gap-3">
                    <button
                      onClick={decreaseQuantity}
                      className="w-8 h-8 rounded border border-gray-300 flex items-center justify-center hover:bg-gray-50"
                    >
                      <Minus className="w-4 h-4" />
                    </button>
                    <span className="w-8 text-center">{quantity}</span>
                    <button
                      onClick={increaseQuantity}
                      className="w-8 h-8 rounded border border-gray-300 flex items-center justify-center hover:bg-gray-50"
                    >
                      <Plus className="w-4 h-4" />
                    </button>
                  </div>
                </div>

                <div className="border-t pt-4 mb-6">
                  <div className="flex items-baseline gap-2 mb-2">
                    <span className="text-2xl font-bold">
                      ‚Ç´ {tour.currentPrice?.toLocaleString()}
                    </span>
                    {tour.originalPrice && (
                      <span className="text-gray-400 line-through text-sm">
                        ‚Ç´ {tour.originalPrice?.toLocaleString()}
                      </span>
                    )}
                  </div>
                  {discountPercent && (
                    <div className="flex gap-2">
                      <span className="bg-red-500 text-white text-xs px-2 py-1 rounded">
                        Sale
                      </span>
                      <span className="bg-red-100 text-red-600 text-xs px-2 py-1 rounded">
                        Gi·∫£m {discountPercent}%
                      </span>
                    </div>
                  )}
                  <p className="text-xs text-gray-500 mt-2">
                    Vui l√≤ng ho√†n t·∫•t c√°c m·ª•c y√™u c·∫ßu ƒë·ªÉ chuy·ªÉn ƒë·∫øn b∆∞·ªõc ti·∫øp
                    theo
                  </p>
                </div>

                <div className="space-y-3">
                  <button
                    onClick={handleBooking}
                    className="w-full bg-blue-500 text-white py-3 rounded-lg font-semibold hover:bg-blue-600 transition-colors"
                  >
                    Th√™m v√†o gi·ªè h√†ng
                  </button>
                  <button
                    onClick={handleBooking}
                    className="w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors"
                  >
                    ƒê·∫∑t ngay
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* FAQ Section */}
          <div className="mt-8 bg-white rounded-lg shadow-sm p-6">
            <h2 className="text-xl font-bold text-blue-600 mb-4 border-l-4 border-blue-500 pl-3">
              C√¢u h·ªèi th∆∞·ªùng g·∫∑p
            </h2>
            <button className="px-4 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-50">
              H·ªó tr·ª£ kh√°ch h√†ng
            </button>
          </div>

          {/* Related Tours */}
          <div className="mt-8 bg-white rounded-lg shadow-sm p-6">
            <h2 className="text-xl font-bold text-blue-600 mb-6 border-l-4 border-blue-500 pl-3">
              B·∫°n c√≥ th·ªÉ s·∫Ω th√≠ch
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              {suggestedTours.map((t) => (
                <TourCard
                  key={t._id}
                  to={`/tours/${t._id}`}
                  image={t.imageItems?.[0]?.imageUrl}
                  title={t.description}
                  location={t.locations?.[0]?.name || "ƒê·ªãa ƒëi·ªÉm"}
                  rating={t.isRating}
                  reviews={t.isReview}
                  bookedText={`${t.usageCount} ƒê√£ ƒë∆∞·ª£c ƒë·∫∑t`}
                  priceFrom={t.basePrice}
                  originalPrice={t.basePrice}
                  onFav={() => handleFavorite(t._id)}
                  isFav={isFav}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
